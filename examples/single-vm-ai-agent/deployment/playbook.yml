---
# AI Agent deployment playbook
# This uses Ansible for complete AI agent setup
- name: Deploy AI Agent on single VM
  hosts: all
  become: yes
  
  vars:
    nodejs_version: "20"
    ai_agent_workspace: /opt/ai-agent-projects
    ai_agent_repo: https://github.com/tfgrid-studio/tfgrid-ai-agent.git
    ai_agent_path: /opt/ai-agent
    git_user_name: "{{ lookup('env', 'GIT_USER_NAME') | default('AI Agent', true) }}"
    git_user_email: "{{ lookup('env', 'GIT_USER_EMAIL') | default('ai-agent@tfgrid.local', true) }}"
    qwen_api_key: "{{ lookup('env', 'QWEN_API_KEY') | default('', true) }}"
    github_token: "{{ lookup('env', 'GITHUB_TOKEN') | default('', true) }}"
    gitea_token: "{{ lookup('env', 'GITEA_TOKEN') | default('', true) }}"
    gitea_url: "{{ lookup('env', 'GITEA_URL') | default('', true) }}"
  
  tasks:
    # Fix DNS resolution issue on ThreeFold Grid VMs  
    - name: Configure DNS servers
      copy:
        dest: /etc/resolv.conf
        content: |
          nameserver 1.1.1.1
          nameserver 8.8.8.8
          nameserver 1.0.0.1
        mode: '0644'
    
    - name: Install additional system packages
      apt:
        name:
          - build-essential
          - python3
          - python3-pip
          - jq
          - tmux
          - screen
          - expect
        state: present
        update_cache: yes
      retries: 3
      delay: 10
    
    - name: Configure git user
      git_config:
        name: user.name
        value: "{{ git_user_name }}"
        scope: global
    
    - name: Configure git email
      git_config:
        name: user.email
        value: "{{ git_user_email }}"
        scope: global
    
    - name: Configure git default branch
      git_config:
        name: init.defaultBranch
        value: main
        scope: global
    
    - name: Create workspace directory
      file:
        path: "{{ ai_agent_workspace }}"
        state: directory
        mode: '0755'
    
    - name: Add NodeSource repository
      shell: |
        curl -fsSL https://deb.nodesource.com/setup_{{ nodejs_version }}.x | bash -
      args:
        creates: /etc/apt/sources.list.d/nodesource.list
    
    - name: Install Node.js
      apt:
        name: nodejs
        state: present
        update_cache: yes
    
    - name: Install Qwen CLI
      npm:
        name: "@qwen-code/qwen-code"
        global: yes
        state: latest
    
    - name: Clone ai-agent repository
      git:
        repo: "{{ ai_agent_repo }}"
        dest: "{{ ai_agent_path }}"
        version: main
        force: yes
    
    - name: Make ai-agent scripts executable
      file:
        path: "{{ ai_agent_path }}/scripts"
        mode: '0755'
        recurse: yes
    
    - name: Generate SSH key for git operations
      openssh_keypair:
        path: /root/.ssh/id_ed25519_git
        type: ed25519
        comment: "ai-agent@tfgrid"
      register: git_ssh_key
    
    - name: Add SSH key to ssh-agent config
      blockinfile:
        path: /root/.ssh/config
        create: yes
        mode: '0600'
        block: |
          Host github.com
            IdentityFile /root/.ssh/id_ed25519_git
            StrictHostKeyChecking no

          Host gitlab.com
            IdentityFile /root/.ssh/id_ed25519_git
            StrictHostKeyChecking no

          {% if gitea_url != '' %}
          Host {{ gitea_url }}
            IdentityFile /root/.ssh/id_ed25519_git
            StrictHostKeyChecking no
          {% endif %}
    
    - name: Configure Qwen API key if provided
      lineinfile:
        path: /root/.bashrc
        line: 'export QWEN_API_KEY="{{ qwen_api_key }}"'
        create: yes
      when: qwen_api_key != ''
      no_log: yes
    
    - name: Configure GitHub token for git operations (if provided)
      block:
        - name: Setup git credential helper with token
          shell: |
            git config --global credential.helper store
            echo "https://{{ github_token }}@github.com" > /root/.git-credentials
            chmod 600 /root/.git-credentials
          no_log: yes

        - name: Verify git credentials configured
          shell: git config --global credential.helper
          register: git_cred_check
          changed_when: false
      when: github_token is defined and github_token != ''

    - name: Configure Gitea token for git operations (if provided)
      block:
        - name: Setup git credential helper with Gitea token
          shell: |
            git config --global credential.helper store
            echo "https://{{ gitea_token }}@{{ gitea_url }}" >> /root/.git-credentials
            chmod 600 /root/.git-credentials
          no_log: yes

        - name: Verify git credentials configured for Gitea
          shell: git config --global credential.helper
          register: gitea_cred_check
          changed_when: false
      when: gitea_token is defined and gitea_token != '' and gitea_url is defined and gitea_url != ''
    
    - name: Display git SSH public key
      debug:
        msg: |
          ========================================
          Git SSH Public Key (add to GitHub/Gitea):
          {{ git_ssh_key.public_key }}
          ========================================
      when: git_ssh_key.public_key is defined
    
    - name: Display AI Agent info
      debug:
        msg: |
          ========================================
          AI Agent Successfully Deployed!
          ========================================
          Workspace: {{ ai_agent_workspace }}
          AI Agent Path: {{ ai_agent_path }}
          Node.js Version: {{ nodejs_version }}
          
          Next Steps:
          1. SSH into VM: tfgrid-compose ssh .
          2. Run AI agent: cd {{ ai_agent_path }} && ./scripts/run.sh
          3. Create projects in: {{ ai_agent_workspace }}
          ========================================
