server {
    listen 80{% if enable_ssl | default(false) %}{% else %} default_server{% endif %};
    listen [::]:80{% if enable_ssl | default(false) %}{% else %} default_server{% endif %};

    root /var/www/gateway-demo;
    index index.html;

    server_name {% if domain_name is defined and enable_ssl | default(false) %}{{ domain_name }}{% else %}_{% endif %};

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # API endpoint
    location /api/status {
        default_type application/json;
        return 200 '{
            "gateway_type": "{{ gateway_type | default("gateway_nat") }}",
            "public_ipv4": "{{ ansible_default_ipv4.address | default("N/A") }}",
            "network": "{{ tfgrid_network | default("test") }}",
            "hostname": "{{ ansible_hostname | default("gateway") }}",
            "wireguard_ip": "{{ wireguard_ip | default("10.1.3.2") }}",
            "mycelium_ip": "{{ mycelium_ip | default("Not assigned") }}",
            "uptime_seconds": {{ ansible_uptime_seconds | int | default(0) }},
            "load_average": "{{ ansible_loadavg["1m"] | default("N/A") }}",
            "memory_total_mb": {{ ansible_memtotal_mb | int | default(0) }},
            "architecture": "{{ ansible_architecture | default("x86_64") }}",
            "features": ["NAT", "Firewall", "WireGuard", "Mycelium"],
            "status": "active"
        }';
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # VM proxy endpoints (dynamically generated)
{% for host in groups['internal'] %}
    location /vm{{ host }}/ {
        proxy_pass http://{{ hostvars[host]['wireguard_ip'] }}:{{ hostvars[host]['vm_port'] }}/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
{% endfor %}

    # Main demo page
    location / {
        try_files $uri $uri/ =404;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }
}